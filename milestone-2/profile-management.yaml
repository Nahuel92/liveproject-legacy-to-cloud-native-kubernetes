apiVersion: v1
kind: Namespace
metadata:
  name: liveprojects

---

apiVersion: v1
kind: Secret
metadata:
  name: mysql-credentials
  namespace: liveprojects
type: Opaque
data:
  root-password: password

---

apiVersion: v1
kind: PersistentVolume
metadata:
  name: mysql-pv-volume
  namespace: liveprojects
  labels:
    type: local
spec:
  storageClassName: manual
  capacity:
    storage: 100Mi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/mnt/data"

---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql-pv-claim
  namespace: liveprojects
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi

---

apiVersion: v1
kind: Service
metadata:
  name: mysql
  namespace: liveprojects
spec:
  ports:
  - port: 3306
  selector:
    app: mysql
  clusterIP: None

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql
  namespace: liveprojects
spec:
  selector:
    matchLabels:
      app: mysql
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: mysql
    spec:
      containers:
      - image: mysql:8.0.22
        name: mysql
        env:
        - name: MYSQL_DATABASE
          value: profiles
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysql-credentials
              key: root-password
        ports:
        - containerPort: 3306
          name: mysql
        volumeMounts:
        - name: mysql-persistent-storage
          mountPath: /var/lib/mysql
      volumes:
      - name: mysql-persistent-storage
        persistentVolumeClaim:
          claimName: mysql-pv-claim

---

apiVersion: v1
kind: Service
metadata:
  name: app
  namespace: liveprojects
spec:
  type: NodePort
  ports:
  - port: 8080
    targetPort: 8080
    nodePort: 30000
  selector:
    app: app

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: app
  namespace: liveprojects
spec:
  selector:
    matchLabels:
      app: app
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: app
    spec:
      containers:
      - image: nahuel92/profile-management:1.0.0
        name: app
        env:
        - name: SPRING_DATASOURCE_URL
          value: jdbc:mysql://mysql/profiles
        - name: SPRING_DATASOURCE_USERNAME
          value: root
        - name: SPRING_DATASOURCE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysql-credentials
              key: root-password
        - name: JPA_PROPERTIES_HIBERNATE_HBM2DDL_AUTO
          value: create
        ports:
        - containerPort: 8080
          name: app